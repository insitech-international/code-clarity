name: Deploy Frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug - Check initial structure
        run: |
          echo "Initial project structure:"
          ls -la
          echo "\nFrontend directory contents:"
          ls -la frontend/
          echo "\nContent of package.json:"
          cat frontend/package.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          npm ci
          echo "Node modules after install:"
          ls -la node_modules/

      - name: Check build configuration
        working-directory: ./frontend
        run: |
          if [ -f "vite.config.js" ]; then
            echo "Vite config found:"
            cat vite.config.js
          elif [ -f "webpack.config.js" ]; then
            echo "Webpack config found:"
            cat webpack.config.js
          else
            echo "No build config found"
          fi

      - name: Build project
        working-directory: ./frontend
        run: |
          echo "Starting build process..."
          echo "Current working directory: $(pwd)"
          echo "PUBLIC_URL set to: $PUBLIC_URL"
          npm run build
          echo "Build completed. Contents of build directory:"
          ls -la build/
        env:
          CI: true
          PUBLIC_URL: "https://code-clarity.insitechinternational.com"
          # Add this if you're using Vite
          VITE_APP_BASE_URL: "https://code-clarity.insitechinternational.com"

      - name: Debug - Examine build output
        working-directory: ./frontend
        run: |
          echo "Build directory structure:"
          ls -la build/
          echo "\nFull directory tree of build:"
          tree build/ || ls -R build/
          echo "\nChecking for index.html:"
          find . -name "index.html"
          if [ -f "build/index.html" ]; then
            echo "\nContent of index.html:"
            head -n 20 build/index.html
          else
            echo "WARNING: index.html not found in expected location!"
          fi

      - name: Prepare deployment
        working-directory: ./frontend
        run: |
          if [ ! -f "build/index.html" ]; then
            echo "Searching for index.html in other locations..."
            find . -name "index.html"
            echo "ERROR: index.html not found in build directory!"
            exit 1
          fi
          echo "code-clarity.insitechinternational.com" > build/CNAME
          touch build/.nojekyll
          echo "Deployment directory contents:"
          ls -la build/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build
          publish_branch: gh-pages
          force_orphan: true
          enable_jekyll: false
          cname: code-clarity.insitechinternational.com

      - name: Verify deployment
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          echo "Deployed files in gh-pages branch:"
          ls -la
          echo "\nChecking for crucial files:"
          for file in index.html CNAME .nojekyll; do
            if [ -f "$file" ]; then
              echo "✓ $file exists"
            else
              echo "✗ $file is missing"
            fi
          done